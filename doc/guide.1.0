The package contains two executable programs.  One ("coalescent") 
generates simulated genetic data using a coalescent model.  The other 
("recosim") generates a random map of variable recombination rates across
a region; its output can be used as one of the inputs to coalescent. 
Use of the two programs is described in more detail below.

========================================================================

recosim

Usage: recosim <parameter file name> <region size (bp)>
(Executing recosim without arguments prints the list of
valid parameters.)

Valid entries in the parameter file are as follows.  They can 
be in any order, and all are optional.

  outfile <output file name>    [default="model.out"]
  model <0,1>    [default=0]
     model 0: uniform recombination, constant or drawn from distribution.
     model 1: model 0 + gamma-distributed hotspots.
  baserate <mean recomb (cM/Mb)>    [default=1.0]
  distribution <recomb distr. file name>    [default=none (const value)]
  space <mean hotspot spacing (bp)>    [default=9000]
  distance_shape <gamma function shape param>    [default=1.0]
  intensity_shape <gamma function shape param>    [default=0.3]
  local_shape <gamma function shape param, local variation>    [default=0.3]
  local_size <size of region of local variation (bp) (e.g. 100000)>    [default=50000000]
  bkgd <fraction in flat bkgd>    [default=0.1]
  random_seed <integer seed> (0=>picked by program based on time and PID) [default=0]

If model 0 is selected, the recombination rate for the region will be
constant.  The constant value can be set directly, using the
"baserate" keyword, or alternatively the value can be chosen at random
from a distribution file supplied with the "distribution" keyword.
(Note: "distribution" overrides "baserate".)  The format for the 
distribution file is three records per line:

 bin_start bin_end cumulative_fraction

Where bin_start and bin_end specify a range of recombination rates (in
cM/Mb) and the cumulative fraction is the probability that the
recombination rate lies within this or earlier bins.  Entries should
be in order of increasing rate; see
examples/bestfit/autosomes_deCODE.distr for an example.

If model 1 is selected, the recombination rate varies across the
region; the variation can be on both local and fine scales.  With this
model, the "baserate" or "distribution" parameters are still valid,
but they now set the expected value of the recombination rate in the
entire region, the value around which local rates vary.  A fraction of
the mean rate can be kept constant across the region, using the "bkgd"
parameter.  The remainder of the recombination rate varies locally in
windows across the region, with the size of the window controlled by
the parameter "local_size"; that is, if local_size is set to 100 kb, a
new value is chosen every 100 kb.  The value is chosen from a gamma
distribution (with shape parameter set by "local_shape"), with a mean
value determined by the regional rate (and the background fraction).
Within each window, recombination is clustered into point-like
hotspots of recombination.  These have a gamma-distributed intensity
with shape parameter "intensity_shape" (and mean determined by the
local rate), and a gamma-distributed spacing with shape parameter
"distance_shape" and mean set by parameter "space".

With model=1 and a small value for intensity_shape, there is 
 a small but extended tail at very high recombination rates; when
simulating long sequences, this can make the coalescent simulator take
orders of magnitude longer on a small fraction of runs.  I have
therefore found it useful to truncate the tail within recosim.  (There
is a commented-out line for doing so in the code.)

A final option is "random_seed", which permits the user to specify a 
seed for the random number generator; this is useful for debugging or 
recreating a previous run.  If a seed of zero is supplied, or
the keyword is not found, a random seed will be generated from the 
time and process id of the job.  In any case, the random seed used is 
always output to stdout during execution.  

========================================================================

User-supplied recombination map

As an alternative to using recosim, you can supply your own recombination map to
"coalescent"; the (tab-delimited) file format is

<position (kb)> <recomb prob/bp/generation>


Each line specifies the recombination rate that will be used from that
position until the next specified position, or the end of the
sequence.

========================================================================

coalescent

The program "coalescent" is a standard coalescent simulation, similar
to Hudson's ms but with a flexible recombination rate.  The program
must be invoked with two command-line arguments, "-p" specifying the
parameter file that contols its behavior, "-o" specifying the base
name for output files.  Output consists of a pair of files for each
sampled population, one containing a list of all variant sites (with
position and allele frequencies), the other containing the haplotypes
for that population.  (Note: "1" is the derived allele, "2" is the
ancestral allele.)

Alternatively, output can be produced in the formatused by the 'ms' simulator
(http://home.uchicago.edu/~rhudson1/source/mksamples.html).  Use -m option instead of -o.
The -m option has no argument (simulated data is written to standard output).
When using -m, the generation at which each mutation occurred can be additionally
output by adding the -M option.  The mutation times are output following a "muttimes:" header
on a line immediately after the "positions:" line of each simulated sample.
(See ms documentation for details of ms output format).  Also, recombination locations
can be output by adding the -L option; recombination locations are then output following
a "recomblocs: " header on a line after the "positions" line, and after the "muttimes" line
if present.  Precision (number of digits after the decimal point) of the output may controlled
by adding -P <ndigits> command-line option; it is especially useful when using recombination
hotspots, since many recombination locations will then share the first few decimal digits.


The parameter file defines the population structure and other
controlling parameters for the run, using keywords.  Comments are 
indicated by "#" at the beginning of a line.  Any population
that appears in the simulation, either as a source of samples or in
the history of those samples, must be defined in the file; at least
one sampled population is required.  The syntax for defining a population
is

pop_define <pop id> <label>
pop_size <pop id> <size>
sample_size <pop id> <n sample>

For example, the following entries

pop_define 1 European
pop_size 1 10000
sample_size 1 50

define population 1 (with the label "European") and set the effective
population size to be 10,000 and the number of sampled chromosomes to
be 50.

Parameters that define the demographic history of the populations are
specified as follows.  They can be supplied in any order.

pop_event migration_rate <label> <source pop id> <target pop id> <T> <probability/chrom/gen>
pop_event split <label> <source pop id> <new pop id> <T>
pop_event change_size <label> <pop id> <T> <size for time > T>
pop_event exp_change_size <label> <pop id> <Tend> <Tstart> <final size> <start size>
pop_event bottleneck <label> <pop id> <T> <inbreeding coefficient> 
pop_event admix <label> <admixed pop id> <source pop id> <T> <fraction of 
    admixed chroms from source>

In these entries, the time T is measured in generations (which can be
fractional) and increases going into the past (present = 0).  Labels
are used only to provide human readable output.  change_size sets the
size for all times prior to T.  A bottleneck is a point-like reduction
in population size.  exp_change_size is an exponential change, e.g.

pop_event exp_change_size "expansion" 1 50 500 10000 1000

represents an exponential population increase in population 1 that 
started 500 generations ago and ended 50 generations ago, increasing
from 1000 to 10000.  Prior to 500 generations, the size remains at 
1000 (unless changed by another pop_event parameter); more recently 
than 50 generations ago, the population size is whatever was set by 
the pop_size command.


Additional parameters:

length <length in bp>
mutation_rate <mutation rate per bp per generation>
gene_conversion_rate <rate of initiation per bp per generation>

Note that The gene conversion tract length is fixed at 500 bp.

recomb_file <file-name> 

identifies the recombination map that will be used for this run.  (See 
the first section above for how to generate this map.)  If the pathname
is relative, it is interpreted relatively to the directory containing
the parameter file (rather than relative to the current directory
at the time cosi is run).
Adding a line
pop_ignore_recombs <pop id>
will disable recombination for nodes in the specified population.
(This can only be used for one population).

By default, coalescent is a finite sites simulation, in that mutations
occur at discrete sites; if multiple mutations occur at a single site,
only the first one is retained.  Setting the parameter
"infinite_sites" to yes converts the output positions to floating
point, with all mutations retained.

number_mutation_sites <N> 

causes a fixed number, N, of mutations to be simulated.

Additional options for the coalescent binary:

-u DIST     approximates the coalescent by forbidding coalescence between
            pairs of nodes whose segment lists are separated by more than DIST
						(specified as a fraction of the total length of the simulated region).

====================================================================
Stephen Schaffner
sfs@broad.mit.edu
